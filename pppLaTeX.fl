%x LATEX HTML VERBATIM LISTAI LISTAD LISTAN TABELA TABELAN TEXTO

%{
	#include "lList.h"
	
	int context=0;
	lList stack=NULL;
	void comeca(int new_context);
	void termina();
	void cabecalhos();
	void fim();
	char buf[1000];
	
	void printTitle(int level, char* title);
%}


%option noyywrap

%option outfile="pppLaTeX.c"

%option prefix="tex"

%%
	int i=0;
	int len=0;
	char* c=NULL;
	context=TEXTO;
	cabecalhos();
	BEGIN(TEXTO);

	

<TEXTO,LISTAI,LISTAD,LISTAN,TABELA,TABELAN>\\latex	{comeca(LATEX);}

<LATEX>\\endlatex	{termina();}




<TEXTO,LISTAI,LISTAD,LISTAN,TABELA>\\html {comeca(HTML);}

<HTML>.|\n	{}

<HTML>\\endhtml	{termina();}




<TEXTO>=titulo=\[[^\]]*\]			{len=strlen(textext)-10; strncpy(buf,textext+9,len);buf[len]='\0'; printf("\\title{%s}\n",buf);}

<TEXTO>=autor=\[[^\]]*\]			{len=strlen(textext)-9;strncpy(buf,textext+8,len);buf[len]='\0'; printf("\\author{%s}\n",buf);}

<TEXTO>=indice=					{printf("\\maketitle\n");printf("\\tableofcontents\n");}

<TEXTO>^=+.*					{for(i=0;textext[i]=='=';i++); printTitle(i,textext+i);}

<TEXTO,LISTAI,LISTAD,LISTAN,TABELA,TABELAN>\\bf\{	{printf("\\textbf{");}

<TEXTO,LISTAI,LISTAD,LISTAN,TABELA,TABELAN>\\it\{			{printf("\\textit{");}

<TEXTO,LISTAI,LISTAD,LISTAN,TABELA,TABELAN>\\emph\{			{ECHO;}

<TEXTO,LISTAI,LISTAD,LISTAN,TABELA,TABELAN>\\begin\{verbatim\}		{ECHO; comeca(VERBATIM);}


<VERBATIM>\\end\{verbatim\}			{ECHO; termina();}

<TEXTO,LISTAI,LISTAD,LISTAN>:i$		{comeca(LISTAI); printf("\\begin{itemize}\n");}

<TEXTO,LISTAI,LISTAD,LISTAN>:d$		{comeca(LISTAD); printf("\\begin{description}\n");}

<TEXTO,LISTAI,LISTAD,LISTAN>:n$		{comeca(LISTAN);printf("\\begin{enumerate}\n");}


<LISTAI,LISTAN>^\s*\.		{printf("\\item ");}

<LISTAD>^\s*\.\[[^\]]*\]	{for(i=0; textext[i]!='.';i++);
				for(len=0;textext[i+len+1]!=']';len++);
				strncpy(buf,textext+i+1,len); buf[len]='\0';
				printf("\\item%s",buf);}

<LISTAI>#					{printf("\\end{itemize}"); termina();}

<LISTAD>#					{printf("\\end{description}"); termina();}

<LISTAN>#					{printf("\\end{enumerate}"); termina();}

<TEXTO,LISTAI,LISTAD,LISTAN,TABELA,TABELAN>\\sic\{[^\}]*\}			{printf("\\verb}%s",textext+5);}

<TEXTO,LISTAI,LISTAD,LISTAN,TABELA,TABELAN>\\link\{[^\},]*,[^\}]*\}		{char* s1=strtok(textext+5,",");
								char* s2=strtok(NULL,",");
								printf("\\href%s}{%s",s1,s2);}

<TEXTO>\\image\{[^\}]*\}	{printf("\\begin{figure}[h]\n");
				printf("\\includegraphics%s\n",textext+6);
				printf("\\end{figure}\n");}
						

<TEXTO>\\linha			printf("\\line(1,0){450}\n");

<TEXTO>\\table\[(l|c|r)*\]	{comeca(TABELA);
				printf("\\begin{table}[h]\n");
				printf("\\begin{tabular}{|");
				c=textext+7;
				for(i=0;c[i]!=']';i++) printf("%c|",c[i]);
				printf("}\n");
				printf("\\hline\n");}

<TEXTO>\\tablen\[(l|c|r)*\]	{comeca(TABELAN);
				printf("\\begin{table}[h]\n");
				printf("\\begin{tabular}{");
				c=textext+8;
				for(i=0;c[i]!=']';i++) printf("%c",c[i]);
				printf("}\n");}

<TABELA,TABELAN>&		{ECHO;}

<TABELA>\\\\			{ECHO; printf("\n\\hline\n");}

<TABELAN>\\\\			{ECHO;}

<TABELA,TABELAN>\\endtable	{printf("\\end{tabular}\n");
				printf("\\end{table}\n");}

<<EOF>>		{fim();return 0;}

%%

int main(int argc, char** argv){
	
	
	texlex();
	return 0;

}

void null_delete(void* e){
	return;
}

void comeca(int new_context){
	stack=push(stack, &context, sizeof(int));
	BEGIN(new_context);
	context=new_context;
}

void termina(){
	stack=pop(stack, &context, sizeof(int),null_delete);
	BEGIN(context);
}

void printTitle(int level, char* title){
	char *sec[]={"chapter","section","subsection","subsubsection","paragrapf","subparagraph"};
	printf("\\%s{%s}\n",sec[level-1],title);	
}

void cabecalhos(){
	
	printf("\\documentclass[pdftex,12pt,a4paper]{report}\n");
	printf("\\usepackage[portuguese]{babel}\n");
	printf("\\usepackage[utf8]{inputenc}\n");
	printf("\\usepackage[pdftex]{graphicx}\n");
	printf("\\usepackage{hyperref}\n");
	printf("\\begin{document}\n");
}

void fim(){
	printf("\\end{document}\n");
}
